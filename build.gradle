import io.cify.runner.tasks.CifyCucumberTask
import io.cify.CifyReportBuilder

buildscript {
    repositories {
        maven {
            url 'libs'
        }
        mavenCentral()
    }
    dependencies {
        classpath('io.cify:exnordea-runner:1.3.18')
        classpath('io.cify:exnordea-reporter:0.0.16')
    }
}

group 'com.fobsolutions'
version '1.0.0'

task wrapper(type: Wrapper) {
    gradleVersion = '3.2.1'
}

apply plugin: 'groovy'
apply plugin: 'cify-runner'

repositories {
    maven {
        url 'libs'
    }
    mavenCentral()
}

tasks.withType(CifyCucumberTask) {
    maxHeapSize = '8g'
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile group: 'io.cify', name: 'exnordea-framework', version: '1.3.25'
    compile group: 'io.cify', name: 'exnordea-reporter', version: '0.0.16'
    compile group: 'io.cify', name: 'exnordea-runner', version: '1.3.18'
    compile group: 'org.json', name: 'json', version: '20160212'
    compile group: 'info.cukes', name: 'gherkin', version: '2.12.2'
    compile group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.10'
    compile files('libs/ojdbc7.jar')

    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'info.cukes', name: 'cucumber-groovy', version: '1.2.5'
}

task cleanUp(type: Delete) {
    delete new File("build/cify/reports")
    delete new File("build/cify/testdata")
    delete new File("build/cify/videos")
}

cucumber.dependsOn(cleanUp)

tasks.cucumber.doLast {
    CifyReportBuilder builder = new CifyReportBuilder()
    builder.generateReports("Luminor", "Regression Suite")
}